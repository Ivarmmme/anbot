import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackContext, filters

# Retrieve the bot token from an environment variable
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
AUTHORIZED_USERS = [6369933143]  # Replace with actual user IDs
echo_users = set()

async def start_echo(update: Update, context: CallbackContext) -> None:
    # Check if the command is issued in reply to a message
    if update.message.reply_to_message:
        user_id = update.message.reply_to_message.from_user.id
        echo_users.add(user_id)
        await update.message.reply_text(f"Echoing messages from user {user_id}.")
    else:
        # Existing functionality to manually add a user by ID
        args = update.message.text.split()
        if len(args) >= 2 and update.message.from_user.id in AUTHORIZED_USERS:
            user_id = int(args[1])
            echo_users.add(user_id)
            await update.message.reply_text(f"Echoing messages from user {user_id}.")

async def stop_echo(update: Update, context: CallbackContext) -> None:
    if update.message.from_user.id in AUTHORIZED_USERS:
        echo_users.clear()  # Clear the set of users being echoed
        await update.message.reply_text("Stopped echoing messages.")

async def echo(update: Update, context: CallbackContext) -> None:
    if update.message and update.message.from_user.id in echo_users:
        # Convert the message text to lowercase and check if 'ivar' is mentioned
        if 'ivar' in update.message.text.lower():
            # Send the custom response instead of echoing the message
            await context.bot.send_message(chat_id=update.message.chat_id, text="Ivar is dope")
        else:
            # Echo the original message
            await context.bot.send_message(chat_id=update.message.chat_id, text=update.message.text)

def main() -> None:
    if TOKEN is None:
        print("The TELEGRAM_BOT_TOKEN environment variable is not set.")
        return
    application = Application.builder().token(TOKEN).build()

    # Command handlers
    application.add_handler(CommandHandler('echo', start_echo, filters.ChatType.GROUPS))
    application.add_handler(CommandHandler('end', stop_echo, filters.ChatType.GROUPS))

    # Message handler
    application.add_handler(MessageHandler(filters.TEXT & filters.ChatType.GROUPS, echo))

    # Start the bot
    application.run_polling()

if __name__ == '__main__':
    main()
